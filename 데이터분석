# 1. 기본 라이브러리 불러오기
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import LabelEncoder

# 2. 데이터 불러오기 (Colab에 파일 업로드하는 방법 포함)
from google.colab import files
uploaded = files.upload()  # 업로드창 열림

df = pd.read_csv(list(uploaded.keys())[0])
print("데이터 모양:", df.shape)
df.head()

# 3. 전처리
# Label Encoding: 범주형(문자형) -> 숫자로 변환
le_biz = LabelEncoder()
le_sex = LabelEncoder()

df['업종코드'] = le_biz.fit_transform(df['card_tpbuz_nm_2'])
df['성별코드'] = le_sex.fit_transform(df['sex'])

# 사용될 피처와 타겟 정의
X = df[['업종코드', '성별코드', 'age', 'day', 'cnt']]
y = df['amt']

# 4. 학습용/테스트용 데이터 나누기
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 5. 모델 학습
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# 6. 예측 및 평가
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"📊 MSE: {mse:,.2f}")
print(f"📈 R2 Score: {r2:.4f}")

# 7. 중요 변수 확인
import matplotlib.pyplot as plt

importances = model.feature_importances_
features = X.columns
indices = np.argsort(importances)

plt.figure(figsize=(8, 6))
plt.title("📌 Feature Importances")
plt.barh(range(len(indices)), importances[indices], align="center")
plt.yticks(range(len(indices)), [features[i] for i in indices])
plt.xlabel("Importance")
plt.show()
